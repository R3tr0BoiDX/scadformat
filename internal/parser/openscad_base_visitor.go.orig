// Code generated from OpenSCAD.g4 by ANTLR 4.13.1. DO NOT EDIT.

package parser // OpenSCAD

import "github.com/antlr4-go/antlr/v4"

type BaseOpenSCADVisitor struct {
	*antlr.BaseParseTreeVisitor
}

func (v *BaseOpenSCADVisitor) VisitStart(ctx *StartContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitInput(ctx *InputContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitInclude(ctx *IncludeContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitUse(ctx *UseContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitStatement(ctx *StatementContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitStatements(ctx *StatementsContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitNullStatement(ctx *NullStatementContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitAssignmentExpression(ctx *AssignmentExpressionContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitAssignment(ctx *AssignmentContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitModifierCharacter(ctx *ModifierCharacterContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitModuleDefinition(ctx *ModuleDefinitionContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitFunctionDefinition(ctx *FunctionDefinitionContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitModuleInstantiation(ctx *ModuleInstantiationContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitIfElseStatement(ctx *IfElseStatementContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitIfStatement(ctx *IfStatementContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitElseStatement(ctx *ElseStatementContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitChildStatement(ctx *ChildStatementContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitChildStatements(ctx *ChildStatementsContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitChildStatementOrAssignment(ctx *ChildStatementOrAssignmentContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitModuleId(ctx *ModuleIdContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitExpr(ctx *ExprContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitLeftExpr(ctx *LeftExprContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitBinary(ctx *BinaryContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitBinaryOperator(ctx *BinaryOperatorContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitMemberAccess(ctx *MemberAccessContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitArrayAccess(ctx *ArrayAccessContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitTernary(ctx *TernaryContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitUnary(ctx *UnaryContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitParenthetical(ctx *ParentheticalContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitVector(ctx *VectorContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitVectorArguments(ctx *VectorArgumentsContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitFunctionCall(ctx *FunctionCallContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitLetStatement(ctx *LetStatementContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitLetExpr(ctx *LetExprContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitAssertion(ctx *AssertionContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitEcho(ctx *EchoContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitRange(ctx *RangeContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitEachStatement(ctx *EachStatementContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitForStatement(ctx *ForStatementContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitIfElseStatementComprehension(ctx *IfElseStatementComprehensionContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitListComprehension(ctx *ListComprehensionContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitChildListComprehension(ctx *ChildListComprehensionContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitChildListComprehensionOrExpr(ctx *ChildListComprehensionOrExprContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitArgumentsDecl(ctx *ArgumentsDeclContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitArgumentDecl(ctx *ArgumentDeclContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitCallArguments(ctx *CallArgumentsContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitCallArgument(ctx *CallArgumentContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitCommas(ctx *CommasContext) interface{} {
	return v.VisitChildren(ctx)
}

func (v *BaseOpenSCADVisitor) VisitOptionalCommas(ctx *OptionalCommasContext) interface{} {
	return v.VisitChildren(ctx)
}
